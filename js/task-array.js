'use ctrict';


//Напишіть цикл, який пропонує ввести
//число більше 100 через prompt.
//Якщо відвідувач ввів інше число - попросити
//ввести ще раз і так далі.
//Цикл має питати число, поки відвідувач не
//введе число більше 100, або натисне кнопку
//скасування в prompt


// function checkNumber() {
//     let number = prompt("Hello, add number > 100 !!!")
//     console.log(number)


//      while(number < 100){
//         number = prompt("Add number > 100 !!!")
//      }

// }
// checkNumber()

// =========================================================================================================

// У змінній min лежить число від 0 до 59.
// Визначте, в яку чверть години потрапляє
// це число(у першу, другу, третю чи четверту).


// =================================================================================


// Функція getLastElementMeta(array) приймає один параметр array - масив довільних значень. 
// Доповни код функції таким чином, щоб вона повертала новий масив з двох елементів:

// перший елемент - це індекс останнього елементу у масиві array
// другий елемент - це значення останнього елементу у масиві array

// function getLastElementMeta(array) {
//    const lastIndex = array.length - 1;
//    const lastElement = array[lastIndex];
//    return [lastIndex, lastElement];
   
//  }
//   ========================================================================================
// Функція getLength(array) очікує один параметр array - масив довільних значень. Доповни код функції так,
//  щоб вона перетворювала масив у рядок, без роздільників, і повертала кількість символів в отриманому рядку.

// function getLength(array) {
//    const joinLendth = array.join("");
//    return joinLendth.length;
//  }
// =======================================================================================
// Сервісу гравірування прикрас потрібна функція, яка б автоматично рахувала ціну гравірування, 
// залежно від кількості слів і ціни за слово.

// Оголошена функція calculateEngravingPrice(message, pricePerWord). 
// Ця функція приймає першим параметром рядок, що складається зі слів, розділених лише пробілами (параметр message)
//  та другим параметром - число, що містить ціну гравірування за одне слово (параметр pricePerWord).

// Доповни тіло функції так, щоб вона повертала загальну вартість гравірування усіх слів в рядку.

// function calculateEngravingPrice(message, pricePerWord) {
//    const word = message.split(" ");
//    const wordLetter = word.length;
//    const totalPrice = wordLetter * pricePerWord;
//    return totalPrice;
   
//  }
//  ====================================================================================================

// Доповни код таким чином, щоб змінні містили часткові копії вихідного масиву fruits.

// firstTwoEls - масив із перших двох елементів
// nonExtremeEls - масив з усіх елементів, крім першого та останнього
// lastThreeEls - масив із трьох останніх елементів

// const fruits = ['apple', 'plum', 'pear', 'orange', 'banana'];

// const firstTwoEls = fruits.slice(0, 2);
// const nonExtremeEls = fruits.slice(1, -1) ;
// const lastThreeEls = fruits.slice (-3);
// // ===================================================================================================

// Функція getSlice(array, value) приймає два параметра:

// array - масив довільних елементів
// value - значення елемента масиву для пошуку
// Доповни код функції getSlice(array, value) так, щоб вона виконувала пошук значення value у масиві array і повертала:

// порожній масив, якщо в array немає елемента зі значенням value
// підмасив, що починається з початку array і до елемента зі значенням value включно, якщо такий елемент є в array

// function getSlice(array, value) {
  
//    const index = array.indexOf(value);
   
//    if (index === -1){
//      return []
//    } else {
//      return array.slice(0, index + 1)
//    }
//  }
//  ===================================================================================================

// Функція createArrayOfNumbers(min, max) приймає два параметра:

// min - ціле число, з якого починаються обчислення
// max - ціле число, до якого включно триватимуть обчислення
// Доповни код функції createArrayOfNumbers(min, max) таким чином, 
// щоб вона повертала масив усіх цілих чисел від значення min до max включно.

// =====================================================================================================

// Функція calculateTotalPrice(order) приймає один параметр order - масив чисел. Доповни функцію так,
//  щоб вона повертала загальну суму елементів з масиву order.

// function calculateTotalPrice(order) {
//   let total = 0;
//   for (let i = 0; i < order.length; i += 1) {
//     total += order[i];
//   }
//   return total
// }

// console.log(calculateTotalPrice([12, 85, 37, 4]))
// console.log(calculateTotalPrice([164, 48, 291]))
// console.log(calculateTotalPrice([412, 371, 94, 63, 176]))

// ==========================================================================================

// Функція getEvenNumbers(start, end) має два параметри start та end, які є цілими числами. 
// Доповни код функції так, щоб вона повертала масив усіх парних чисел від start до end. 
// Якщо жодного парного числа немає, то масив має бути пустим. 
// Парним вважається число, яке ділиться на 2 без остачі (10 % 2 === 0). Використовуй цикл for.

// function getEvenNumbers(start, end) {
//   const evenNumbers = [];
//   for (let i = start; i <= end; i++) {
//     if (i % 2 === 0) {
//      evenNumbers.push(i);
//     } 
//   }
// return evenNumbers;
// }
// =========================================================================================

// Функція getCommonElements(array1, array2), приймає два масиви (array1 та array2) 
// довільної довжини в якості параметрів.

// Доповни код функції:

// Створи порожній масив для зберігання нового масиву.
// Використай цикл for для ітерації кожного елемента у array1.
// У тілі циклу перевір, чи поточний елемент існує у array2 за допомогою методу includes.
// Якщо він існує, то додай елемент до нового масиву.
// Поверни наповнений масив спільних елементів як результат роботи функції.

// function getCommonElements(array1, array2) {
//   let array3 = [];
//   for (let i = 0; i < array1.length; i ++) {
//     if (array2.includes(array1[i])) {
//       array3.push(array1[i]);
//     }
    
//   }
//   return array3;
// }
// // ==============================================================================================================
// Доповни код функції calculateTotalPrice(order) так, щоб вона повертала загальну суму чисел в масиві order. 
// Використай цикл for...of для перебору масиву.

// function calculateTotalPrice(order) {
//   let totalNumber = 0;
//   for (let number of order){
//     totalNumber += number;
//   }
    
//   return totalNumber;
// }

// ==================================================================================================
// Функція createReversedArray() може приймати довільну кількість аргументів.
//  Доповни код функції так, щоб вона повертала масив усіх аргументів, 
//  але в масиві вони повинні йти у зворотному порядку. Тобто, при виклику createReversedArray(1, 2, 3), 
//  функція має повернути масив [3, 2, 1]. Використовуй цикл або метод масиву toReversed(), 
// який застосовується до масиву і результатом роботи повертає новий масив з елементами у зворотньому порядку.

// function createReversedArray(...args) {
//   const reversedArray = args.reverse(); 
//   return reversedArray; 
// }

// =================================================================================================
// Функція calculateTax(amount, taxRate) оголошує два параметри:

// amount - число, сума від якої потрібно обчислити податок. Обов'язковий параметр.
// taxRate - число, податкова ставка. Необов'язковий параметр. За замовчуванням його значення має бути 0.2.
// Доповни код функції так, щоб вона повертала суму податку - результат множення суми на податкову ставку.

// function calculateTax(amount, taxRate = 0.2) {
//   let totalTax = amount * taxRate;
//   return totalTax;
// }
// =================================================================================================
